package com.Level2Tasks;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Scanner;

public class PasswordStrengthChecker {

	public static void main(String[] args) {
		
		System.out.println("Level-2 Task-2");
		System.out.println("Password Strength Checker");
		System.out.println("===============");
		
		
		try
		{
			InputStreamReader is=new InputStreamReader(System.in);
			BufferedReader br=new BufferedReader(is);
			
			System.out.println("Enter the password you want to check");
			String password=br.readLine();
			
			br.close();
			
			int length=password.length();
			boolean hasUppercase=false;
			boolean hasLowercase=false;
			boolean hasDigit=false;
			boolean hasSpecialCharecter=false;
			
			for (int i = 0; i < length; i++) {
	            char ch = password.charAt(i);
	            if (Character.isUpperCase(ch)) {
	                hasUppercase = true;
	            } else if (Character.isLowerCase(ch)) {
	                hasLowercase = true;
	            } else if (Character.isDigit(ch)) {
	                hasDigit = true;
	            } else if (isSpecialCharacter(ch)) {
	                hasSpecialCharecter = true;
	            }
	        }
			String strength = "Weak";
	        if (length >= 8 && hasUppercase && hasLowercase && hasDigit && hasSpecialCharecter) {
	            strength = "Extremely Strong";
	        }
	        else if (length >= 8 && hasUppercase && hasLowercase && (hasDigit || hasSpecialCharecter)) {
	            strength = "Strong";
	        }
	        else if (length >= 6 && (hasUppercase || hasLowercase) && (hasDigit || hasSpecialCharecter)) {
	            strength = "Moderate";
	        }

//	        Checking the strength of the password
	        System.out.println("Password Strength: " + strength);
	    }
	
		catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
	}
		public static boolean isSpecialCharacter(char ch) {
	        String specialCharacters = "!@#$%^&*()_+[]{}|;:'\"<>,.?/~`-=";
	        return specialCharacters.contains(String.valueOf(ch));
		
		}
		
	
		
}
